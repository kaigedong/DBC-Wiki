import{r as t,o as c,c as i,a as n,b as s,F as d,e as a,d as e}from"./app.554cb4e4.js";import{_ as r}from"./plugin-vue_export-helper.21dcd24c.js";var l="/DBC-Wiki/assets/image-20210629104434008.35138cc3.png",h="/DBC-Wiki/assets/image-20210714140945243.fa5d2c68.png",u="/DBC-Wiki/assets/image-20210707140400114.34db11f5.png",p="/DBC-Wiki/assets/image-20210714141352887.40929c0c.png",m="/DBC-Wiki/assets/2021-08-09_11-15-16284796475672.6e47aa38.png",b="/DBC-Wiki/assets/image-20210623143656481.80b86c89.png",g="/DBC-Wiki/assets/image-20210623144049700.226c116f.png",f="/DBC-Wiki/assets/offline.7cb4931e.png";const w={},k=a('<h1 id="machine-onchain-steps" tabindex="-1"><a class="header-anchor" href="#machine-onchain-steps" aria-hidden="true">#</a> Machine Onchain steps</h1><h2 id="method-1-binding-via-web-wallet" tabindex="-1"><a class="header-anchor" href="#method-1-binding-via-web-wallet" aria-hidden="true">#</a> Method 1: Binding via web wallet</h2><h3 id="_0-ready-to-work" tabindex="-1"><a class="header-anchor" href="#_0-ready-to-work" aria-hidden="true">#</a> 0. Ready to work</h3><ul><li><p>Before binding, please make sure you have enough balance in your wallet. (Each card is estimated to be 100,000 DBC).</p><blockquote><p>DBC-Mainnet is launched, Please go to https://www.dbcwallet.io/?rpc=wss%3A%2F%2Finfo.dbcwallet.io#/explorer to make machine onchain! The following steps in browser should be done in DBC-Mainnet</p></blockquote></li></ul><h3 id="_1-stash-account-binding-control-account" tabindex="-1"><a class="header-anchor" href="#_1-stash-account-binding-control-account" aria-hidden="true">#</a> 1. Stash account binding control account</h3><ul><li><p>Description\uFF1A</p><ul><li>For the safety of your account funds, we strongly recommend using a multi-signature account as a capital account. For multi-signature accounts, please go to https://github.com/DeepBrainChain/DBC-DOC/blob/master/DBC_install/%E5%A4%9A%E9%87%8D%E7%AD%BE%E5%90%8D%E8%B4%A6%E6%88%B7.md</li><li>The <code>Stash Account</code> is built into the machine. When the machine is bound, the DBC will be pledged from the <code>Stash Account</code>, and when the rewards are distributed, it will be issued to the <code>Stash Account</code>.</li><li><code>Control account</code> is the manager, responsible for the operation of the machine, maintenance, etc.</li><li><code>Stash account</code> must specify a <code>control account</code>.</li><li>The <code>control account</code> requires some DBC, and the handling fee generated by the operation on the chain will be deducted from the <code>control account</code>.</li></ul></li><li><p>Navigate to: <code>Developer</code>--<code>Transaction</code>, as shown below, select the <code>setController</code> method of the <code>onlineProfile</code> module, select your <code>stash account</code> and <code>control account</code> respectively, and click bind in the lower right corner</p><p><img src="'+l+'" alt="image-20210629104434008"></p><blockquote><p>As shown above, BOB_STASH account (<code>Stash account</code>) set DAVE account as <code>control account</code>.</p><p><code>Stash Account</code>: <code>5HpG9w8EBLe5XCrbczpwq5TSXvedjrBGCwqxK1iQ7qUsSWFc</code></p><p><code>Control account</code>: <code>5DAAnrj7VHTznn2AWBemMuyBwZWs6FNFjdyVXUeYum3PTXFy</code></p></blockquote></li><li><p>Query whether the capital account and the control account are successfully bound**: as shown in the figure below, when the capital account is successfully bound to the control account, you can select <code>controllerStash</code> of the <code>onlineProfile</code> module through <code>Developer</code>--<code>Chain Status</code> Store, to query the fund account corresponding to the <code>control account</code>. In the figure below, a fund account corresponding to a control account is queried.</p><p><img src="'+h+`" alt="image-20210714140945243"></p></li></ul><h3 id="_2-the-machine-generates-a-signed-message" tabindex="-1"><a class="header-anchor" href="#_2-the-machine-generates-a-signed-message" aria-hidden="true">#</a> 2. The machine generates a signed message</h3><blockquote><p>You need to use the machine&#39;s private key to generate a signed message and send it to the chain to confirm the built-in fund account.</p></blockquote><ul><li>Query <code>Machine ID</code> and \`Machine Private Key\`\`</li></ul><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># The machine ID and private key are in the directory of the dbc installation program, such as:</span>
<span class="token comment"># /home/dbc/0.3.7.3/dbc_repo/dat/node.dat</span>
<span class="token comment"># Its content is:</span>
<span class="token assign-left variable">node_id</span><span class="token operator">=</span>8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 <span class="token comment"># Machine ID</span>
<span class="token assign-left variable">node_private_key</span><span class="token operator">=</span>398f0c28f98885e046333d4a41c19cee4c37368a9832c6502f6cfd182e2aef89 <span class="token comment"># Machine private key</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><ul><li>Use <code>machine private key</code> to generate signature data</li></ul>`,11),v=e("Use the following "),_={href:"https://github.com/DeepBrainChain/DeepBrainChain-MainChain/blob/master/scripts/test_script/gen_signature.js",target:"_blank",rel:"noopener noreferrer"},C=e("script"),y=e(" to generate signature data."),D=a(`<div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment">#Instructions</span>
<span class="token number">1</span>. Install nodejs <span class="token number">14</span> on the linux server <span class="token punctuation">(</span>the version must be <span class="token number">14</span>, otherwise there will be other errors, please Google <span class="token keyword">for</span> the installation method<span class="token punctuation">)</span>
<span class="token number">2</span>. Clone script: <span class="token function">git</span> clone https://github.com/DeepBrainChain/DeepBrainChain-MainChain.git
<span class="token number">3</span>. Installation: <span class="token builtin class-name">cd</span> DeepBrainChain-MainChain/scripts/test_script <span class="token operator">&amp;&amp;</span> <span class="token function">npm</span> <span class="token function">install</span>
<span class="token number">4</span>. Execute the script
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>Among them, <code>--msg</code> specifies the message that needs to be signed, and the message content is <code>machine ID+fund account</code>; <code>--key</code> specifies <code>machine private key</code>, and <strong>key is prefixed with 0x</strong>;</p><p>The data after <code>Signature:</code> is the <strong>signature data</strong>.</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>\u276F <span class="token function">node</span> gen_signature.js --key 0x398f0c28f98885e046333d4a41c19cee4c37368a9832c6502f6cfd182e2aef89 --msg 8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a485CiPPseXPECbkjWCa6MnjNokrgYjMqmKndv2rSnekmSK2DjL

<span class="token comment">### Message: 8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a485CiPPseXPECbkjWCa6MnjNokrgYjMqmKndv2rSnekmSK2DjL</span>
<span class="token comment">### Signer: 8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48</span>
<span class="token comment">### Signature: 0x5cc8b4c49b244d7c071b124ef68119d7549dd805ea43f69e3c142fd5909f926041a9cad93b16085d72431df2d1164e7911085423bca16625295583686f2fce8c</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h4 id="use-control-account-to-go-online" tabindex="-1"><a class="header-anchor" href="#use-control-account-to-go-online" aria-hidden="true">#</a> Use <code>Control Account</code> to go online</h4><p>Now, we need to broadcast the <strong><em>signature data</em></strong> generated in the previous step through the <code>control account</code>.</p><p>Navigate to: <code>Developer</code>--<code>Transaction</code>, and select the <code>bondMachine</code> method of the <code>onlineProfile</code> module as shown below. Use <code>Control Account</code> to bind <code>Machine ID</code> (<code>MachineId</code>) with <code>Control Account</code>. Fill in the parameters as shown below:<img src="`+u+'" alt="image-20210707140400114"></p><h4 id="query-whether-the-machine-is-successfully-bound" tabindex="-1"><a class="header-anchor" href="#query-whether-the-machine-is-successfully-bound" aria-hidden="true">#</a> Query whether the machine is successfully bound:</h4><p>After completing this step, you can query the machines in the system through <code>Developer</code>--<code>Chain Status</code>--<code>onlineProfile</code>--<code>liveMachines</code>. As shown in the figure below, a machine is queried that has been bound. Next, you need to add machine information</p><ul><li><img src="'+p+'" alt="image-20210714141352887"></li></ul><h4 id="control-account-add-machine-information" tabindex="-1"><a class="header-anchor" href="#control-account-add-machine-information" aria-hidden="true">#</a> <code>Control account</code> add machine information</h4><p><code>Control account</code> also needs to add machine information:Navigate to <code>Developer</code> -- <code>Transaction</code>--<code>onlineProfile</code>--<code>addMachineInfo</code></p><p><img src="'+m+'" alt="2021-08-09_11-15"></p><ul><li>Parameter description: <ul><li>upload_net: upload bandwidth (take 20MB bandwidth as an example, fill in 20).</li><li>download_net: download bandwidth (take 20MB bandwidth as an example, fill in 20).</li><li>longitude:Longitude. The east longitude is positive and the west longitude is negative (take the east longitude 131.1548123 as an example, fill in 1311548,Be careful not to fill in the longitude and latitude upside down.The error can be within the range of 30 km, and the pledge will be deducted if the content is wrong).</li><li>latitude: Latitude. North latitude is positive and south latitude is negative (take south latitude 121.143253 as an example, fill in -1211432,Be careful not to fill in the longitude and latitude upside down.The error can be within the range of 30 km, and the pledge will be deducted if the content is wrong).</li><li>Computer room network information, you can choose from the following according to the situation: (China Mobile: China Mobile, China Unicom: China Unicom, China Telecom: China Telecom, non-Chinese operators fill in according to their actual names.The pledge will be deducted if the content is wrong)</li><li>Mirror information, choose from the following: (ubuntu, ubuntu-proofs)</li></ul></li></ul><h3 id="_3-check-and-receive-rewards" tabindex="-1"><a class="header-anchor" href="#_3-check-and-receive-rewards" aria-hidden="true">#</a> 3. Check and receive rewards</h3><h4 id="_1-check-rewards" tabindex="-1"><a class="header-anchor" href="#_1-check-rewards" aria-hidden="true">#</a> 1. Check rewards</h4><p>In the developer-chain status, select: the <code>stashMachines</code> method of the <code>onlineProfile</code> module, fill in the parameters in <strong><code>fund account</code></strong>, you will be able to find the detailed information of the reward for the <code>fund account</code>.</p><p>Among them, <code>can_claim_reward</code> is the reward that can be claimed, and <code>left_reard</code> is the remaining part of the reward obtained every day before (the remaining 75%, this 75% will be released in the subsequent 150 antennas).</p><p><img src="'+b+'" alt="image-20210623143656481"></p><h4 id="_2-collect-rewards" tabindex="-1"><a class="header-anchor" href="#_2-collect-rewards" aria-hidden="true">#</a> 2. Collect rewards</h4><p>Use <strong>Control Account</strong> to receive it, and rewards will be issued to <strong><code>Stash Account</code></strong>.</p><p><img src="'+g+'" alt="image-20210623144049700"></p><h2 id="query-the-machine-bound-to-the-account" tabindex="-1"><a class="header-anchor" href="#query-the-machine-bound-to-the-account" aria-hidden="true">#</a> Query the machine bound to the account</h2><ul><li>View the machines on the chain under the fund account <ul><li>Navigate to <code>Developer</code>----<code>Chain Status</code>----<code>Storage</code>----<code>onlineProfile</code>----<code>stashMachines</code></li></ul></li><li>View the machines on the chain under the control account <ul><li>Navigate to <code>Developer</code>----<code>Chain Status</code>----<code>Storage</code>----<code>onlineProfile</code>----<code>controllerMachines</code></li></ul></li></ul><h2 id="machine-offline-and-back-online" tabindex="-1"><a class="header-anchor" href="#machine-offline-and-back-online" aria-hidden="true">#</a> Machine offline and back online</h2><ul><li>Machine offline <ul><li>Navigate to <code>Developer</code>----<code>Transaction</code>----<code>onlineprofile</code>----<code>controllerReportOffline</code>----<code>Enter machine id</code>----<code>Submit transaction</code></li><li>Note that the initiator needs to be a controlling account <img src="'+f+'" alt="img"></li></ul></li><li>Modify machine information <ul><li>Navigate to <code>Developer</code>----<code>Transaction</code>----<code>onlineprofile</code>----<code>addMachineInfo</code></li></ul></li><li>The machine is back online <ul><li>Navigate to <code>Developer</code>----<code>Transaction</code>----<code>onlineprofile</code>----<code>controllerReportOnline</code>----<code>Enter machine id</code>----<code>Submit transaction</code></li></ul></li></ul>',26);function B(x,M){const o=t("ExternalLinkIcon");return c(),i(d,null,[k,n("p",null,[v,n("a",_,[C,s(o)]),y]),D],64)}var T=r(w,[["render",B]]);export{T as default};
